
# This Azure CLI script creates a new image from an Azure compute image gallery, based on an existing VM.  
# NOTE - Locations are very important!  
# The locations/region that you choose must support Postgres and ARM VM images
# The source VM must be in the same region as the image gallery.
# Check for availability: https://azure.microsoft.com/en-us/explore/global-infrastructure/products-by-region/

# Set Env Vars, can be set in .env file
export RESOURCE_GROUP_NAME=<name of your resource group>
export LOCATION=<select an arm-compatible location like eastus2>
export NETWORK_NAME=<name for your network>
export NETWORK_SUBNET_NAME=<name for the subnet in your network>
export NETWORK_SECURITY_GROUP=<name for your network security group>
export POSTGRES_NAME=<name for your postgres server>
export VM_NAME=<name for your source VM>
export SOURCE_VM_NAME=<name for your source VM>
export SOURCE_RESOURCE_GROUP_NAME=<name for your source VM resource group>
export TARGET_VM_NAME=<name for your target VM when deployed form the gallery>
export VM_IMAGE=<name for the Compute image gallery>
export VM_IMAGE_VERSION=<version number for the VM image definition in the gallery>
export IMAGE_GALLERY_NAME=<name for the VM image definition in the gallery>
export POSTGRES_ADMIN_USER=<postgres admin user name>
export POSTGRES_ADMIN_PASSWORD=<postgres admin password>

#!/usr/bin/env bash
# source .env

# Find the current subscription ID
# az account image show
export SUBSCRIPTION_ID=<Subscription ID>
# Find ARM images published by canonical: 
# az vm image list --all --architecture Arm64 --publisher Canonical --output table
export sourcearmimage=<sample image: "Canonical:UbuntuServer:18_04-lts-arm64:18.04.202303080">
export sourcearmimage-name=< sample image name: "18_04-lts-arm64">

# Create a resource group.
az group create --resource-group $RESOURCE_GROUP_NAME --location $LOCATION

# create vnet
az network vnet create --resource-group $RESOURCE_GROUP_NAME --location $LOCATION --name $NETWORK_NAME --address-prefixes 172.0.0.0/16

# create subnet
az network vnet subnet create --resource-group $RESOURCE_GROUP_NAME --vnet-name $NETWORK_NAME --address-prefixes 172.0.0.0/24 --name $NETWORK_NAME

# create private dns zone
az network private-dns zone create --resource-group $RESOURCE_GROUP_NAME --name ${NETWORK_NAME}.private.postgres.database.azure.com


# Create a Postgres flexible server
az postgres flexible-server create --resource-group $RESOURCE_GROUP_NAME \
  --name $POSTGRES_NAME --location $LOCATION \
  --subnet /subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${RESOURCE_GROUP_NAME}/providers/Microsoft.Network/virtualNetworks/${NETWORK_NAME}/subnets/${NETWORK_NAME} \
  --private-dns-zone /subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${RESOURCE_GROUP_NAME}/providers/Microsoft.Network/privateDnsZones/${NETWORK_NAME}.postgres.database.azure.com \
  --admin-user $POSTGRES_ADMIN_USER --admin-password $POSTGRES_ADMIN_PASSWORD

# Create a VM image gallery.
az sig create --resource-group $RESOURCE_GROUP_NAME --gallery-name $IMAGE_GALLERY_NAME

# Create the Image Definition
# Change the gallery-name when adding a new image
 az sig image-definition create \
    --resource-group $RESOURCE_GROUP_NAME \
    --location $LOCATION \
    --gallery-name $IMAGE_GALLERY_NAME \
    --gallery-image-definition $VM_IMAGE \
    --publisher Canonical \
    --offer UbuntuServer \
    --sku ${sourcearmimagename} \
    --os-type Linux \
    --os-state specialized \
    --hyper-v-generation V2 \
    --architecture Arm64
    
# Get the ID of the source VM to use as an image, save the result for the az sig image-version create command below.
az vm get-instance-view -g $RESOURCE_GROUP_NAME -n $VM_NAME --query id

# Create the Image Version
# Change the version number when adding an additional version
az sig image-version create \
   --resource-group $RESOURCE_GROUP_NAME \
   --location $LOCATION \
   --gallery-name $IMAGE_GALLERY_NAME \
   --gallery-image-definition $VM_IMAGE \
   --gallery-image-version $VM_IMAGE_VERSION \
   --replica-count 1 \
   --virtual-machine "/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${SOURCE_RESOURCE_GROUP_NAME}/providers/Microsoft.Compute/virtualMachines/${SOURCE_VM_NAME}"

# Create a VM from the image gallery 

az vm create \
   --resource-group $RESOURCE_GROUP_NAME \
   --location $LOCATION \
   --name $TARGET_VM_NAME \
   --image "/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${RESOURCE_GROUP_NAME}/providers/Microsoft.Compute/galleries/${IMAGE_GALLERY_NAME}/images/${VM_IMAGE}/versions/${VM_IMAGE_VERSION}" \
   --vnet-name $NETWORK_NAME \
   --subnet $NETWORK_SUBNET_NAME \
   --public-ip-sku Standard \
   --generate-ssh-keys \
   --nsg $NETWORK_SECURITY_GROUP \
   --specialized \
   --size Standard_D2ps_v5

   
# Optional - Open Ports
   
az vm open-port --resource-group $RESOURCE_GROUP_NAME \
   --location $LOCATION \
   --name $TARGET_VM_NAME \
   --port 2222,8080 --priority 100